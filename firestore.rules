
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check for admin custom claim
    function isAdmin() {
      return exists(request.auth.token) && request.auth.token.admin == true;
    }

    // Helper function to check if the user is the owner of the document
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // Rules for the 'orders' collection
    match /orders/{orderId} {
      // Admin can do anything
      // Users can create orders for themselves
      // Users can read/update their own orders
      allow read, update, delete: if isAdmin() || (request.auth != null && isOwner(resource.data.userId));
      allow create: if isAdmin() || (request.auth != null && isOwner(request.resource.data.userId));
    }

    // Rules for the 'contacts' collection
    match /contacts/{contactId} {
        // Admin can do anything
        // Authenticated users can read their own inquiries
        allow read, update, delete: if isAdmin() || (request.auth != null && isOwner(resource.data.userId));

        // Anyone can create a contact message (for the public contact form)
        // Admins can also create messages
        allow create: if true;
    }
  }
}
